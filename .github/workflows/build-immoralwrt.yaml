name: build-immoral-wrt

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-immoralwrt.yaml'
      - 'devices/newifi-d2/.config'
  schedule:
    - cron: 0 0 * * 5
  workflow_dispatch: {}

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: master
  BUILD_CONFIG: devices/newifi-d2/.config
  CONFIGS_DIR: devices/newifi-d2/files

jobs:
  build_openwrt:
    name: Build OpenWrt firmware
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -yqq purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -yqq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                                         bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
                                         g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
                                         libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
                                         libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
                                         nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
                                         python-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
                                         texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -yqq autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Clone source code
        run: git clone --single-branch $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        working-directory: ./openwrt
        run: |
          rm -f ./.config*
          [ -e ../$BUILD_CONFIG ] && mv ../$BUILD_CONFIG ./.config
          sed -i 's/^[ \t]*//g' ./.config
          cat .config
          make defconfig

      - name: Make download
        working-directory: ./openwrt
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        working-directory: ./openwrt
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./openwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ./openwrt/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./openwrt/artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 1

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 1
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
